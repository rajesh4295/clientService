// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: subscription/subscription.proto

package subscription

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscriptionEnum_Status int32

const (
	SubscriptionEnum_Active    SubscriptionEnum_Status = 0
	SubscriptionEnum_Expired   SubscriptionEnum_Status = 1
	SubscriptionEnum_Cancelled SubscriptionEnum_Status = 2
	SubscriptionEnum_Deleted   SubscriptionEnum_Status = 3
)

// Enum value maps for SubscriptionEnum_Status.
var (
	SubscriptionEnum_Status_name = map[int32]string{
		0: "Active",
		1: "Expired",
		2: "Cancelled",
		3: "Deleted",
	}
	SubscriptionEnum_Status_value = map[string]int32{
		"Active":    0,
		"Expired":   1,
		"Cancelled": 2,
		"Deleted":   3,
	}
)

func (x SubscriptionEnum_Status) Enum() *SubscriptionEnum_Status {
	p := new(SubscriptionEnum_Status)
	*p = x
	return p
}

func (x SubscriptionEnum_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionEnum_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_subscription_proto_enumTypes[0].Descriptor()
}

func (SubscriptionEnum_Status) Type() protoreflect.EnumType {
	return &file_subscription_subscription_proto_enumTypes[0]
}

func (x SubscriptionEnum_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SubscriptionEnum_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SubscriptionEnum_Status(num)
	return nil
}

// Deprecated: Use SubscriptionEnum_Status.Descriptor instead.
func (SubscriptionEnum_Status) EnumDescriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{0, 0}
}

type SubscriptionEnum_PurchaseType int32

const (
	SubscriptionEnum_New     SubscriptionEnum_PurchaseType = 0
	SubscriptionEnum_Renewal SubscriptionEnum_PurchaseType = 1
)

// Enum value maps for SubscriptionEnum_PurchaseType.
var (
	SubscriptionEnum_PurchaseType_name = map[int32]string{
		0: "New",
		1: "Renewal",
	}
	SubscriptionEnum_PurchaseType_value = map[string]int32{
		"New":     0,
		"Renewal": 1,
	}
)

func (x SubscriptionEnum_PurchaseType) Enum() *SubscriptionEnum_PurchaseType {
	p := new(SubscriptionEnum_PurchaseType)
	*p = x
	return p
}

func (x SubscriptionEnum_PurchaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionEnum_PurchaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_subscription_proto_enumTypes[1].Descriptor()
}

func (SubscriptionEnum_PurchaseType) Type() protoreflect.EnumType {
	return &file_subscription_subscription_proto_enumTypes[1]
}

func (x SubscriptionEnum_PurchaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SubscriptionEnum_PurchaseType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SubscriptionEnum_PurchaseType(num)
	return nil
}

// Deprecated: Use SubscriptionEnum_PurchaseType.Descriptor instead.
func (SubscriptionEnum_PurchaseType) EnumDescriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{0, 1}
}

type SubscriptionEnum_LicenseType int32

const (
	SubscriptionEnum_Full  SubscriptionEnum_LicenseType = 0
	SubscriptionEnum_Trial SubscriptionEnum_LicenseType = 1
	SubscriptionEnum_Demo  SubscriptionEnum_LicenseType = 2
)

// Enum value maps for SubscriptionEnum_LicenseType.
var (
	SubscriptionEnum_LicenseType_name = map[int32]string{
		0: "Full",
		1: "Trial",
		2: "Demo",
	}
	SubscriptionEnum_LicenseType_value = map[string]int32{
		"Full":  0,
		"Trial": 1,
		"Demo":  2,
	}
)

func (x SubscriptionEnum_LicenseType) Enum() *SubscriptionEnum_LicenseType {
	p := new(SubscriptionEnum_LicenseType)
	*p = x
	return p
}

func (x SubscriptionEnum_LicenseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionEnum_LicenseType) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_subscription_proto_enumTypes[2].Descriptor()
}

func (SubscriptionEnum_LicenseType) Type() protoreflect.EnumType {
	return &file_subscription_subscription_proto_enumTypes[2]
}

func (x SubscriptionEnum_LicenseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SubscriptionEnum_LicenseType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SubscriptionEnum_LicenseType(num)
	return nil
}

// Deprecated: Use SubscriptionEnum_LicenseType.Descriptor instead.
func (SubscriptionEnum_LicenseType) EnumDescriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{0, 2}
}

type SubscriptionEnum_PaymentStatus int32

const (
	SubscriptionEnum_Paid     SubscriptionEnum_PaymentStatus = 0
	SubscriptionEnum_Pending  SubscriptionEnum_PaymentStatus = 1
	SubscriptionEnum_Refunded SubscriptionEnum_PaymentStatus = 2
)

// Enum value maps for SubscriptionEnum_PaymentStatus.
var (
	SubscriptionEnum_PaymentStatus_name = map[int32]string{
		0: "Paid",
		1: "Pending",
		2: "Refunded",
	}
	SubscriptionEnum_PaymentStatus_value = map[string]int32{
		"Paid":     0,
		"Pending":  1,
		"Refunded": 2,
	}
)

func (x SubscriptionEnum_PaymentStatus) Enum() *SubscriptionEnum_PaymentStatus {
	p := new(SubscriptionEnum_PaymentStatus)
	*p = x
	return p
}

func (x SubscriptionEnum_PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionEnum_PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_subscription_proto_enumTypes[3].Descriptor()
}

func (SubscriptionEnum_PaymentStatus) Type() protoreflect.EnumType {
	return &file_subscription_subscription_proto_enumTypes[3]
}

func (x SubscriptionEnum_PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SubscriptionEnum_PaymentStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SubscriptionEnum_PaymentStatus(num)
	return nil
}

// Deprecated: Use SubscriptionEnum_PaymentStatus.Descriptor instead.
func (SubscriptionEnum_PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{0, 3}
}

type SubscriptionEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscriptionEnum) Reset() {
	*x = SubscriptionEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_subscription_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionEnum) ProtoMessage() {}

func (x *SubscriptionEnum) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionEnum.ProtoReflect.Descriptor instead.
func (*SubscriptionEnum) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{0}
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string                         `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	SubscriptionId *string                         `protobuf:"bytes,2,req,name=subscriptionId" json:"subscriptionId,omitempty"`
	OrgId          *string                         `protobuf:"bytes,3,req,name=orgId" json:"orgId,omitempty"`
	PlanId         *string                         `protobuf:"bytes,4,req,name=planId" json:"planId,omitempty"`
	BillingId      *string                         `protobuf:"bytes,5,req,name=billingId" json:"billingId,omitempty"`
	Status         *SubscriptionEnum_Status        `protobuf:"varint,6,req,name=status,enum=SubscriptionEnum_Status" json:"status,omitempty"`
	PurchaseType   *SubscriptionEnum_PurchaseType  `protobuf:"varint,7,req,name=purchaseType,enum=SubscriptionEnum_PurchaseType" json:"purchaseType,omitempty"`
	LicenseType    *SubscriptionEnum_LicenseType   `protobuf:"varint,8,req,name=licenseType,enum=SubscriptionEnum_LicenseType" json:"licenseType,omitempty"`
	PaymentStatus  *SubscriptionEnum_PaymentStatus `protobuf:"varint,9,req,name=paymentStatus,enum=SubscriptionEnum_PaymentStatus" json:"paymentStatus,omitempty"`
	Description    *string                         `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	ExpiresAt      *timestamppb.Timestamp          `protobuf:"bytes,11,req,name=expiresAt" json:"expiresAt,omitempty"`
	CreatedAt      *timestamppb.Timestamp          `protobuf:"bytes,12,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp          `protobuf:"bytes,13,opt,name=updatedAt" json:"updatedAt,omitempty"`
	DeletedAt      *timestamppb.Timestamp          `protobuf:"bytes,14,opt,name=deletedAt" json:"deletedAt,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_subscription_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *Subscription) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Subscription) GetSubscriptionId() string {
	if x != nil && x.SubscriptionId != nil {
		return *x.SubscriptionId
	}
	return ""
}

func (x *Subscription) GetOrgId() string {
	if x != nil && x.OrgId != nil {
		return *x.OrgId
	}
	return ""
}

func (x *Subscription) GetPlanId() string {
	if x != nil && x.PlanId != nil {
		return *x.PlanId
	}
	return ""
}

func (x *Subscription) GetBillingId() string {
	if x != nil && x.BillingId != nil {
		return *x.BillingId
	}
	return ""
}

func (x *Subscription) GetStatus() SubscriptionEnum_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SubscriptionEnum_Active
}

func (x *Subscription) GetPurchaseType() SubscriptionEnum_PurchaseType {
	if x != nil && x.PurchaseType != nil {
		return *x.PurchaseType
	}
	return SubscriptionEnum_New
}

func (x *Subscription) GetLicenseType() SubscriptionEnum_LicenseType {
	if x != nil && x.LicenseType != nil {
		return *x.LicenseType
	}
	return SubscriptionEnum_Full
}

func (x *Subscription) GetPaymentStatus() SubscriptionEnum_PaymentStatus {
	if x != nil && x.PaymentStatus != nil {
		return *x.PaymentStatus
	}
	return SubscriptionEnum_Paid
}

func (x *Subscription) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Subscription) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Subscription) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Subscription) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Subscription) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

var File_subscription_subscription_proto protoreflect.FileDescriptor

var file_subscription_subscription_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdb, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x3d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x10, 0x03, 0x22, 0x24, 0x0a, 0x0c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x65, 0x77, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x10, 0x01, 0x22, 0x2c, 0x0a, 0x0b,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x65, 0x6d, 0x6f, 0x10, 0x02, 0x22, 0x34, 0x0a, 0x0d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x61, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x02,
	0x22, 0x9a, 0x05, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d,
	0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x34, 0x5a,
	0x32, 0x65, 0x74, 0x6e, 0x61, 0x73, 0x79, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e,
}

var (
	file_subscription_subscription_proto_rawDescOnce sync.Once
	file_subscription_subscription_proto_rawDescData = file_subscription_subscription_proto_rawDesc
)

func file_subscription_subscription_proto_rawDescGZIP() []byte {
	file_subscription_subscription_proto_rawDescOnce.Do(func() {
		file_subscription_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(file_subscription_subscription_proto_rawDescData)
	})
	return file_subscription_subscription_proto_rawDescData
}

var file_subscription_subscription_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_subscription_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_subscription_subscription_proto_goTypes = []any{
	(SubscriptionEnum_Status)(0),        // 0: SubscriptionEnum.Status
	(SubscriptionEnum_PurchaseType)(0),  // 1: SubscriptionEnum.PurchaseType
	(SubscriptionEnum_LicenseType)(0),   // 2: SubscriptionEnum.LicenseType
	(SubscriptionEnum_PaymentStatus)(0), // 3: SubscriptionEnum.PaymentStatus
	(*SubscriptionEnum)(nil),            // 4: SubscriptionEnum
	(*Subscription)(nil),                // 5: Subscription
	(*timestamppb.Timestamp)(nil),       // 6: google.protobuf.Timestamp
}
var file_subscription_subscription_proto_depIdxs = []int32{
	0, // 0: Subscription.status:type_name -> SubscriptionEnum.Status
	1, // 1: Subscription.purchaseType:type_name -> SubscriptionEnum.PurchaseType
	2, // 2: Subscription.licenseType:type_name -> SubscriptionEnum.LicenseType
	3, // 3: Subscription.paymentStatus:type_name -> SubscriptionEnum.PaymentStatus
	6, // 4: Subscription.expiresAt:type_name -> google.protobuf.Timestamp
	6, // 5: Subscription.createdAt:type_name -> google.protobuf.Timestamp
	6, // 6: Subscription.updatedAt:type_name -> google.protobuf.Timestamp
	6, // 7: Subscription.deletedAt:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_subscription_subscription_proto_init() }
func file_subscription_subscription_proto_init() {
	if File_subscription_subscription_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_subscription_subscription_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SubscriptionEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_subscription_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_subscription_subscription_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_subscription_subscription_proto_goTypes,
		DependencyIndexes: file_subscription_subscription_proto_depIdxs,
		EnumInfos:         file_subscription_subscription_proto_enumTypes,
		MessageInfos:      file_subscription_subscription_proto_msgTypes,
	}.Build()
	File_subscription_subscription_proto = out.File
	file_subscription_subscription_proto_rawDesc = nil
	file_subscription_subscription_proto_goTypes = nil
	file_subscription_subscription_proto_depIdxs = nil
}
