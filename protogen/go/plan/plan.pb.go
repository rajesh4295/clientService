// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: plan/plan.proto

package plan

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlanEnum_Status int32

const (
	PlanEnum_Active   PlanEnum_Status = 0
	PlanEnum_Inactive PlanEnum_Status = 1
	PlanEnum_Deleted  PlanEnum_Status = 2
)

// Enum value maps for PlanEnum_Status.
var (
	PlanEnum_Status_name = map[int32]string{
		0: "Active",
		1: "Inactive",
		2: "Deleted",
	}
	PlanEnum_Status_value = map[string]int32{
		"Active":   0,
		"Inactive": 1,
		"Deleted":  2,
	}
)

func (x PlanEnum_Status) Enum() *PlanEnum_Status {
	p := new(PlanEnum_Status)
	*p = x
	return p
}

func (x PlanEnum_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlanEnum_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_plan_plan_proto_enumTypes[0].Descriptor()
}

func (PlanEnum_Status) Type() protoreflect.EnumType {
	return &file_plan_plan_proto_enumTypes[0]
}

func (x PlanEnum_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PlanEnum_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PlanEnum_Status(num)
	return nil
}

// Deprecated: Use PlanEnum_Status.Descriptor instead.
func (PlanEnum_Status) EnumDescriptor() ([]byte, []int) {
	return file_plan_plan_proto_rawDescGZIP(), []int{0, 0}
}

type PlanEnum_Type int32

const (
	PlanEnum_Free       PlanEnum_Type = 0
	PlanEnum_Personal   PlanEnum_Type = 1
	PlanEnum_Startup    PlanEnum_Type = 2
	PlanEnum_Growth     PlanEnum_Type = 4
	PlanEnum_Enterprise PlanEnum_Type = 5
)

// Enum value maps for PlanEnum_Type.
var (
	PlanEnum_Type_name = map[int32]string{
		0: "Free",
		1: "Personal",
		2: "Startup",
		4: "Growth",
		5: "Enterprise",
	}
	PlanEnum_Type_value = map[string]int32{
		"Free":       0,
		"Personal":   1,
		"Startup":    2,
		"Growth":     4,
		"Enterprise": 5,
	}
)

func (x PlanEnum_Type) Enum() *PlanEnum_Type {
	p := new(PlanEnum_Type)
	*p = x
	return p
}

func (x PlanEnum_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlanEnum_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_plan_plan_proto_enumTypes[1].Descriptor()
}

func (PlanEnum_Type) Type() protoreflect.EnumType {
	return &file_plan_plan_proto_enumTypes[1]
}

func (x PlanEnum_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PlanEnum_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PlanEnum_Type(num)
	return nil
}

// Deprecated: Use PlanEnum_Type.Descriptor instead.
func (PlanEnum_Type) EnumDescriptor() ([]byte, []int) {
	return file_plan_plan_proto_rawDescGZIP(), []int{0, 1}
}

type PlanEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlanEnum) Reset() {
	*x = PlanEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanEnum) ProtoMessage() {}

func (x *PlanEnum) ProtoReflect() protoreflect.Message {
	mi := &file_plan_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanEnum.ProtoReflect.Descriptor instead.
func (*PlanEnum) Descriptor() ([]byte, []int) {
	return file_plan_plan_proto_rawDescGZIP(), []int{0}
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *string                `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	ProductId   *string                `protobuf:"bytes,2,req,name=productId" json:"productId,omitempty"`
	Name        *string                `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Description *string                `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Price       *int32                 `protobuf:"varint,5,req,name=price" json:"price,omitempty"`
	Currency    *string                `protobuf:"bytes,6,req,name=currency" json:"currency,omitempty"`
	Type        *PlanEnum_Type         `protobuf:"varint,7,req,name=type,enum=PlanEnum_Type" json:"type,omitempty"`
	Status      *PlanEnum_Status       `protobuf:"varint,8,req,name=status,enum=PlanEnum_Status" json:"status,omitempty"`
	Seats       *int32                 `protobuf:"varint,9,req,name=seats" json:"seats,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updatedAt" json:"updatedAt,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deletedAt" json:"deletedAt,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_plan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_plan_plan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_plan_plan_proto_rawDescGZIP(), []int{1}
}

func (x *Plan) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Plan) GetProductId() string {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return ""
}

func (x *Plan) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Plan) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Plan) GetPrice() int32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *Plan) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *Plan) GetType() PlanEnum_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return PlanEnum_Free
}

func (x *Plan) GetStatus() PlanEnum_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return PlanEnum_Active
}

func (x *Plan) GetSeats() int32 {
	if x != nil && x.Seats != nil {
		return *x.Seats
	}
	return 0
}

func (x *Plan) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Plan) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Plan) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

var File_plan_plan_proto protoreflect.FileDescriptor

var file_plan_plan_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x22,
	0x2f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x02,
	0x22, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x72, 0x65, 0x65,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x10, 0x05, 0x22, 0xae, 0x03, 0x0a, 0x04, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x6e, 0x75,
	0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x2c, 0x5a, 0x2a, 0x65, 0x74,
	0x6e, 0x61, 0x73, 0x79, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x6e,
}

var (
	file_plan_plan_proto_rawDescOnce sync.Once
	file_plan_plan_proto_rawDescData = file_plan_plan_proto_rawDesc
)

func file_plan_plan_proto_rawDescGZIP() []byte {
	file_plan_plan_proto_rawDescOnce.Do(func() {
		file_plan_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_plan_plan_proto_rawDescData)
	})
	return file_plan_plan_proto_rawDescData
}

var file_plan_plan_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_plan_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_plan_plan_proto_goTypes = []any{
	(PlanEnum_Status)(0),          // 0: PlanEnum.Status
	(PlanEnum_Type)(0),            // 1: PlanEnum.Type
	(*PlanEnum)(nil),              // 2: PlanEnum
	(*Plan)(nil),                  // 3: Plan
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_plan_plan_proto_depIdxs = []int32{
	1, // 0: Plan.type:type_name -> PlanEnum.Type
	0, // 1: Plan.status:type_name -> PlanEnum.Status
	4, // 2: Plan.createdAt:type_name -> google.protobuf.Timestamp
	4, // 3: Plan.updatedAt:type_name -> google.protobuf.Timestamp
	4, // 4: Plan.deletedAt:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_plan_plan_proto_init() }
func file_plan_plan_proto_init() {
	if File_plan_plan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plan_plan_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PlanEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_plan_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plan_plan_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plan_plan_proto_goTypes,
		DependencyIndexes: file_plan_plan_proto_depIdxs,
		EnumInfos:         file_plan_plan_proto_enumTypes,
		MessageInfos:      file_plan_plan_proto_msgTypes,
	}.Build()
	File_plan_plan_proto = out.File
	file_plan_plan_proto_rawDesc = nil
	file_plan_plan_proto_goTypes = nil
	file_plan_plan_proto_depIdxs = nil
}
